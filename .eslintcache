[{"/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/App.tsx":"1","/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/index.tsx":"2","/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/components/BreedsList/index.tsx":"3","/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/components/Breed/index.tsx":"4","/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/components/Search/index.tsx":"5"},{"size":659,"mtime":1607015303587,"results":"6","hashOfConfig":"7"},{"size":197,"mtime":1607015307823,"results":"8","hashOfConfig":"7"},{"size":3443,"mtime":1607010707405,"results":"9","hashOfConfig":"7"},{"size":1870,"mtime":1607010522134,"results":"10","hashOfConfig":"7"},{"size":369,"mtime":1606988984957,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lofp2b",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/App.tsx",[],"/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/index.tsx",[],"/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/components/BreedsList/index.tsx",["24"],"import React, { useEffect, useState } from 'react';\nimport Search from '../Search';\n\nimport './breeds-list.scss';\nimport { breedInfo } from '../../interfaces/breedInfo';\n\ninterface breeds {\n\t[key: string]: string[];\n};\n\ninterface BreedListProps {\n\tonBreedChoice: ( breed: {displayName: string, URLFragment: string} ) => void;\n}\n\nexport default function BreedsList( {onBreedChoice}: BreedListProps ){\n\tconst [ breedsData, setBreedsData ] = useState<breedInfo[]>([])!;\n\tconst [ filteredBreedsData, setFilteredBreedsData ] = useState<breedInfo[]>([])!;\n\tconst [ isLoaded, setIsLoaded ] = useState( false );\n\tconst [ error, setError ] = useState<Error | null>( null );\n\n\tconst createSubBreedInfo = (breed: string, subBreeds: string[] ): breedInfo[] => {\n\t\tconst subBreedInfo = [];\n\n\t\tfor (const subBreed of subBreeds ) {\n\t\t\tsubBreedInfo.push( {\n\t\t\t\tdisplayName: `${capitalize(subBreed)} ${capitalize(breed)}`,\n\t\t\t\tURLFragment: `${breed}/${subBreed}`\n\t\t\t} );\n\t\t}\n\n\t\treturn subBreedInfo;\n\t};\n\n\tconst convertBreedsData = ( data: breeds ) => {\n\t\tconst breedsInfo: breedInfo[] = [];\n\n\t\tfor (const dogBreed in data) {\n\t\t\tif (data[dogBreed].length > 0) {\n\t\t\t  breedsInfo.push(...createSubBreedInfo(dogBreed, data[ dogBreed ]));\n\t\t\t} else {\n\t\t\t\tbreedsInfo.push({\n\t\t\t\t\tdisplayName: capitalize( dogBreed ),\n\t\t\t\t\tURLFragment: dogBreed\n\t\t\t\t} );\n\t\t\t}\n\t\t  }\n\n\t\t  return breedsInfo;\n\t}\n\n\tconst handleClick = ( e: React.MouseEvent<HTMLElement> ) => {\n\t\tconst selectedBreed = {\n\t\t\tdisplayName: e.currentTarget.getAttribute( 'name' )!,\n\t\t\tURLFragment: e.currentTarget.getAttribute( 'value' )!\n\t\t}\n\n\t\tonBreedChoice( selectedBreed );\n\t}\n\n\tconst filterBreeds = ( phrase: string) => {\n\t\tconst result = breedsData.filter( element => {\n\t\t\tif ( element.displayName.includes( ' ' ) ) {\n\t\t\t\tconst subBreedName = element.displayName.substring( 0, element.displayName.indexOf(' ' ) - 1 );\n\t\t\t\tconst breedName = element.displayName.substring( element.displayName.indexOf(' ') + 1, element.displayName.length );\n\n\t\t\t\treturn ( breedName.toLocaleLowerCase().startsWith( phrase.toLocaleLowerCase() )|| subBreedName.toLowerCase().startsWith( phrase.toLocaleLowerCase() ) )\n\t\t\t} else {\n\t\t\t\treturn element.displayName.toLowerCase().startsWith( phrase.toLocaleLowerCase() )\n\t\t\t}\n\t\t} );\n\n\t\tsetFilteredBreedsData( result );\n\t}\n\n\tuseEffect( () => {\n\t\tfetch( 'https://dog.ceo/api/breeds/list/all' )\n\t\t\t.then( response => response.json() )\n\t\t\t.then( data => convertBreedsData( data.message ))\n\t\t\t.then( breeds => {\n\t\t\t\tsetBreedsData(breeds );\n\t\t\t\tsetFilteredBreedsData(breeds);\n\t\t\t\tsetIsLoaded( true );\n\t\t\t} )\n\t\t\t.catch( error => {\n\t\t\t\tsetError( error );\n\t\t\t\tsetIsLoaded( true );\n\t\t\t} )\n\t}, [] );\n\n\tif ( error ) {\n\t\treturn <div>{ error.message }</div>\n\t} else if ( !isLoaded ) {\n\t\treturn <div></div>\n\t} else  {\n\n\t\treturn (\n\t\t  <div className='breed-list-container'>\n\t\t\t  <div className='search-container'>\n\t\t\t\t<h1>Welcome to doggie search</h1>\n\t\t\t \t<Search onChange={ filterBreeds }/>\n\t\t\t\t<p>Click on a breed to see some lovely doggies</p>\n\t\t\t  </div>\n\t\t\t<div className='breed-list'>\n\t\t\t\t{filteredBreedsData.map((breedInfo, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<div key={index} className='breed-button-container'>\n\t\t\t\t\t\t<button onClick={ handleClick } value={ breedInfo.URLFragment } name={breedInfo.displayName}>{breedInfo.displayName}</button>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t  </div>\n\t\t);\n\t}\n};\n\nconst capitalize = ( name: string ) => {\n\treturn name[0].toUpperCase() + name.slice( 1 );\n}",["25","26"],"/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/components/Breed/index.tsx",[],"/Users/ewa.potorecka/Documents/js/dogs/dog-breeds/src/components/Search/index.tsx",[],{"ruleId":"27","severity":1,"message":"28","line":88,"column":5,"nodeType":"29","endLine":88,"endColumn":7,"suggestions":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'convertBreedsData', 'setBreedsData', and 'setFilteredBreedsData'. Either include them or remove the dependency array.","ArrayExpression",["35"],"no-native-reassign",["36"],"no-negated-in-lhs",["37"],{"desc":"38","fix":"39"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [convertBreedsData, setBreedsData, setFilteredBreedsData]",{"range":"40","text":"41"},[2644,2646],"[convertBreedsData, setBreedsData, setFilteredBreedsData]"]